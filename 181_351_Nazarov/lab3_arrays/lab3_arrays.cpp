// lab3_arrays.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
// МАССИВЫ
/*
 * Массив -- блок из нескольких однотипных данных
 * Задавать массивом удобно:
 * - вектора и матрицы
 * - множ-во точек  из 3D и 2D геометрии
 * - числовой ряд, таблица etc.
 * - строка -- массив символов
 * - видеобуфер (2-мерный массив, соответствующий пикселам экрана)
 *
 * тип_данных имя_массива[размер]
 * тип_данных имя_массива[размер] = {значение для всех эл-тов}
 * тип_данных имя_массива[размер] = {значение1, значение2, значение3}
 * тип_данных имя_массива[размер1(строка)][размер2(столбец)] =
 * {{a11, a12, a13},
 *  {a21, a22, a23},
 *  {a31, a32, a33}}
 * Нулевой массив int a[3][3] = {{0}}
 * Обращение к элементам массива:
 * имя_массива[индекс]
 * имя_массива[строка][столбец]
*/

int main()
{
	// initialization of matrices:
	int matrix1[3][3] = { {0, 1, 1},
						 {2, 3, 5},
						 {8, 13, 21} };
	int matrix2[3][3] = { {34, 55, 89},
						 {144, 233, 377},
						 {610, 987, 1597} };
	int matrix3[3][3] = { {0} };

	// pseudo multiplication (elementwise):
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
			matrix3[i][j] = matrix1[i][j] * matrix2[i][j];
	}
	std::cout << "The multipliers are stored in the program (see the source code)\n\n\n"
		"(1) Pseudo (elementwise) multiplication of the two 3x3 matrices\n\n"
		"Resulting 3x3 matrix:\n\n";
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
			std::cout << '\t' << matrix3[i][j];
		std::cout << std::endl;
	}
	std::cout << "\n\n\n";

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
			matrix3[i][j] = 0;
	}

	// real multiplication:
	for (int k = 0; k < 3; k++)
	{
		for (int i = 0; i < 3; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				matrix3[i][j] += matrix1[i][k] * matrix2[k][j];
			}
		}
	}

	std::cout << "(2) Real multiplication of the two 3x3 matrices\n\n"
		"Resulting 3x3 matrix:\n\n";
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
			std::cout << '\t' << matrix3[i][j];
		std::cout << std::endl;
	}

	std::cout << std::endl;

	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
